<?php
	// $Id$
/**
* Display help and module information
* @param path which path of the site we're displaying help
* @param arg array that holds the current path as would be returned from arg() function
* @return help text for the path
*/
function article67_help($path, $arg) {
	$output = '';  //declare your output variable
	switch ($path) {
	case "admin/help#article67":
	  $output = '<p>'.  t("Displays links to nodes created on this date") .'</p>';
	  break;
	}
	  return $output;
} // function onthisdate_help


function article67_theme() {
  return array(
    'forums' => array(
      'template' => 'article67',
      'arguments' => array('node' => NULL),
    ));
}
    
/**
* Valid permissions for this module
* @return array An array of valid permissions for the onthisdate module
*/
function article67_perm() {
  return array('access article67 content');
} // function onthisdate_perm()

/**
* Implementation of hook_block
* @param string $op one of "list", "view", "save" and "configure"
* @param integer $delta code to identify the block
* @param array $edit only for "save" operation
**/
function article67_block($op = 'list', $delta = 0, $edit = array()) {  
  if ($op == "list") {
    // Generate listing of blocks from this module, for the admin/block page
    $block = array();
    $block[0]["info"] = t('article67');
    return $block;
  }else if ($op == 'view') {

    // Generate our block content
   
  	$result = article67_get_nodes();
        //$result = array();
	$first = false;
	$antal = 0;
	foreach ($result as $node) {
		$_content = (FALSE) ?'<div class="fragment-right">': '<div class="fragment">' ;


		$replace = array('<b>','</b>','<p>','</p>','<div>','</div>');
		$teaser = ($node->field_teaser[0]['value']) ? $node->field_teaser[0]['value'] : $node->field_ingress[0]['value'];

                if ( empty($teaser) ){
                    $teaser =  strip_tags($node->body);
                }

		$ingress = strip_tags(str_replace($replace,'', $teaser  ) );

		if ($node->field_main_image[0]['filepath'] != null){
				$_content .='<a href="'.url('node/'. $node->nid).'" title="'.$node->title.'">'. theme('imagecache', 'Article_preview_B', $node->field_main_image[0]['filepath'], '', $ingress).'</a>';
		}
		$_content .= '<h3><a href="'.url('node/'. $node->nid).'" title="'.$node->title.'">'. $node->title .'</a></h3>';

		$_content .= $ingress = ( strlen($ingress) > 80 ) ? substr($ingress, 0, 80 ). '...': $ingress;
		$_content .='<br /> <a href="'.url('node/'. $node->nid).'" title="'.$node->title.'"> Les mer...</a>';
		$_content .= '<br /> Publisert: '. date('Y-m-d',$node->created );
		//$_content .='  |  <a href="'.url('node/'. $node->nid).'" title="'.$node->title.'" ">Legg till kommentar('. $node->comment_count .')</a>';
		$_content .= '</div>';
                $_content .= ($antal == 2 || $antal == 5) ?'<div class="fragmentRowLinebreak"></div>':'' ;
		$block_content .= $_content;
		$antal++;

	}
	
	
	$block_content .='<div class="linebreak"> </div>';
    //  the block view
    if ($block_content == '') {   
       // no content from a week ago
       $block['subject'] = 'Sorry No Contents';
       $block['content'] = 'Sorry No Content';
       return $block;
    }
    // set up the block
    $block['subject'] = 'article67';
    $block['content'] = $block_content;
    return $block;
  }
}

  function article67_get_nodes(){

    $path_pieces = explode('/', drupal_get_path_alias($_GET['q']));
    $resultArray = array();
    if ($path_pieces[0] == 'frontpage' ){
    	$result = db_query_range('SELECT n.nid, n.created
	 							  FROM {node} n
	 							  WHERE n.status = 1
	 						      AND n.type="article"
                                                              AND n.promote <> 0
	 						      ORDER BY n.created DESC','article',13,6);

    	while ($row = db_fetch_object($result)) {
		    	$node = node_load(array("nid" => $row->nid));
		  		array_push($resultArray, $node);
		}

    }
    else{

    	 switch ($path_pieces[0]) {
            case 'Bil':
                $result = taxonomy_select_nodes(array(29), 'or', 0, FALSE);
                ;
                break;

            case 'Bransjenytt':
                $result = taxonomy_select_nodes(array(30), 'or', 0, FALSE);
                ;
                break;

            case 'Kostnader-Trender':
                $result = taxonomy_select_nodes(array(31), 'or');
                ;
                break;

            case 'Produktnyheter':
                $result = taxonomy_select_nodes(array(32), 'or');
                ;
                break;

            case 'Prosjektfakta':
                $result = taxonomy_select_nodes(array(33), 'or');
                ;
                break;
            case 'boligbygg':
                $result = taxonomy_select_nodes(array(37), 'or');
                ;
                break;
            case 'naeringsbygg':
                $result = taxonomy_select_nodes(array(38), 'or');
                ;
                break;
            case 'anlegg':
                $result = taxonomy_select_nodes(array(39), 'or');
                ;
                break;
            case 'gronn-sone':
                $result = taxonomy_select_nodes(array(40), 'or');
                ;
                break;

            default:
                $result = taxonomy_select_nodes(array(29, 30, 31, 32, 33, 35, 37, 38, 39, 40), 'or');
                ;
                ;
                break;
        }
    	$counter = 0;// must add this becouse there do not exist any limit in D6 for taxonomy_select_nodes
	    while ($row = db_fetch_object($result)) {
	    	if ($counter >= 13 && $counter <= 19 ) {
		    	$node = node_load(array("nid" => $row->nid));
		  		array_push($resultArray, $node);
	    	}

	  		$counter++;
		}

    }

	return $resultArray;


}


function template_preprocess_article67(&$node) {
 
}


