<?php
	// $Id$
/**
* Display help and module information
* @param path which path of the site we're displaying help
* @param arg array that holds the current path as would be returned from arg() function
* @return help text for the path
*/
function articlelisting_help($path, $arg) {
	$output = '';  //declare your output variable
	switch ($path) {
	case "admin/help#articlelisting":
	  $output = '<p>'.  t("Displays links to nodes created on this date") .'</p>';
	  break;
	}
	  return $output;
} // function onthisdate_help


function articlelisting_theme() {
  return array(
    'forums' => array(
      'template' => 'articlelisting',
      'arguments' => array('node' => NULL),
    ));
}
    
/**
* Valid permissions for this module
* @return array An array of valid permissions for the onthisdate module
*/
function articlelisting_perm() {
  return array('access articlelisting content');
} // function onthisdate_perm()


function is_odd($num){
 return $num % 2 == 0 ? false:true;
}

/**
* Implementation of hook_block
* @param string $op one of "list", "view", "save" and "configure"
* @param integer $delta code to identify the block
* @param array $edit only for "save" operation
**/
function articlelisting_block($op = 'list', $delta = 0, $edit = array()) {  
  if ($op == "list") {
    // Generate listing of blocks from this module, for the admin/block page
    $block = array();
    $block[0]["info"] = t('Article list');
    return $block;
  }else if ($op == 'view') {
  	$terms = 0;
  	$num_per_page = variable_get("articlelisting_max", 10);
  	if ((arg(0) == 'node') && is_numeric(arg(1)) && is_numeric(arg(2))) {
  		$terms = arg(2);
  	
		$sql = 'SELECT n.nid, n.created 
					FROM {node} n 
					INNER JOIN {term_node} tn ON n.nid = tn.nid 
					WHERE tn.tid in ('.$terms.') 
					AND n.status=1 
					AND n.type = "article"
					ORDER BY n.created DESC';
		
		$result1 = pager_query( $sql , $num_per_page );
		
		$first = false;
		$antal = 1;
		while ($row = db_fetch_object($result1)) { 
			$_content = ( is_odd($antal)  ) ?'<div class="arow">':' ';
			$_content .= ( is_odd($antal)  ) ?'<div class="fragment-separator">': '<div class="fragment">' ;
			$node = node_load(array("nid" => $row->nid));
			
			$replace = array('<b>','</b>','<p>','</p>','<div>','</div>');
			$teaser = ($node->field_teaser[0]['value']) ? $node->field_teaser[0]['value'] : $node->field_ingress[0]['value'];
			$ingress = str_replace($replace,'', $teaser );
			
			$_content .='<a href="'.url('node/'. $node->nid).'" title="'.$node->title.'">'. theme('imagecache', 'Article_preview_B', $node->field_main_image[0]['filepath'], $node->title, $ingress).'</a>';
			$_content .= '<h3><a href="'.url('node/'. $node->nid).'" title="'.$node->title.'">'. $node->title .'</a></h3>';
			
			$_content .= $ingress = ( strlen($ingress) > 80 ) ? substr($ingress, 0, 80 ). '...': $ingress;
			$_content .='<br /> <a href="'.url('node/'. $node->nid).'" title="'.$node->title.'"> Les mer...</a>';
			$_content .= '<br /> Publisert: '. date('Y-m-d',$node->created );
			
			$_content .= '</div>';
			$_content .= ( is_odd($antal) ) ?' ': '</div><div class="linebreak"> </div>';
			$block_content .= $_content;
			$antal++;
			
		}
		$block_content .= theme('pager', NULL, 10, 0);
  	}
  	
    //  the block view
    if ($block_content == '') {   
       // no content from a week ago
       $block['subject'] = 'Sorry No Contents';
       $block['content'] = 'Sorry No Content';
       return $block;
    }
    // set up the block
    $block['subject'] = 'articlelisting';
    $block['content'] = $block_content;
    return $block;
  } 
  
} // function onthisdate_block

function articlelisting_admin() {
  $form = array();

  $form['articlelisting_max'] = array(
    '#type' => 'textfield',
    '#title' => t('Maximum number items'),
    '#default_value' => variable_get('articlelisting_max', 10),
    '#size' => 2,
    '#maxlength' => 2,
    '#description' => t("The maximum number of links to display on the Page."),
    '#required' => TRUE,
  );

  return system_settings_form($form);
}

function articlelisting_admin_validate($form, &$form_state) {
  $maxdisp = $form_state['values']['articlelisting_max'];
  if (!is_numeric($maxdisp)) {
    form_set_error('articlelisting_max', t('You must enter an integer for the maximum number of article.'));
  }
  else if ($maxdisp <= 0) {
    form_set_error('articlelisting_max', t('Maximum number of article must be positive.'));
  }
}
/*
function firstarticle_menu() {

  $items = array();

  $items['admin/settings/article23'] = array(
    'title' => 'first article module settings',
    'description' => 'Description of your On this date settings page',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('firstarticle_admin'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
   );

  return $items;
}
*/
function template_preprocess_articlelisting(&$node) {
 
}


